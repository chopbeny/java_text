<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.pc.store.dao.StoreDao">

    <sql id="Base_Column_List">
    store_id, t_store_info.create_time, t_store_info.create_person, t_store_info.update_time,
    t_store_info.update_person, t_store_info.version, t_store_info.is_deleted,
    store_code, store_name, store_phone, store_manager_id, store_license_code, store_address,
    store_invitation_code, store_province_code, store_city_code, store_region_code
    </sql>
    <!-- 门店展示的字段 -->
    <sql id="display_Column_List">
    store_id, t_store_info.version, store_code, store_name, store_phone, store_manager_id,
    store_license_code, store_address, store_invitation_code,
    store_province_code, store_city_code, store_region_code
  </sql>


    <!-- 新增门店信息 -->
    <insert id="insertSelective" parameterType="com.xzsd.pc.store.entity.Store">
        insert into t_store_info
                (store_id,
                create_time,
                create_person,
                update_time,
                update_person,
                version,
                is_deleted,
                store_code,
                store_name,
                store_phone,
                store_manager_id,
                store_license_code,
                store_address,
                store_invitation_code,
                store_province_code,
                store_city_code,
                store_region_code)
        value (
                #{storeId},
                #{createTime},
                #{createPerson},
                #{updateTime},
                #{updatePerson},
                #{version},
                #{isDeleted},
                #{storeCode},
                #{storeName},
                #{storePhone},
                #{storeManagerId},
                #{storeLicenseCode},
                #{storeAddress},
                #{storeInvitationCode},
                #{storeProvinceCode},
                #{storeCityCode},
                #{storeRegionCode})
    </insert>

    <!-- 根据传入的查询条件查询门店信息列表 -->
    <select id="listStores" resultType="com.xzsd.pc.store.entity.Store">
        select
            <include refid="display_Column_List"/>
            , t_sys_user_info.user_name
            , t_sys_user_info.user_login_name
        from
            t_store_info
        LEFT JOIN t_sys_user_info on t_store_info.store_manager_id = t_sys_user_info.user_id
        where
            t_store_info.is_deleted = 1
            <if test="store.storeCode != null and store.storeCode != ''">
                and store_code like CONCAT('%', #{store.storeCode}, '%')
            </if>
            <if test="store.storeName != null and store.storeName != ''">
                and store_name like CONCAT('%', #{store.storeName}, '%')
            </if>
            <if test="store.storeProvinceCode != null and store.storeProvinceCode != ''">
                and store_province_code = #{store.storeProvinceCode}
            </if>
            <if test="store.storeCityCode != null and store.storeCityCode != ''">
                and store_city_code = #{store.storeCityCode}
            </if>
            <if test="store.storeRegionCode != null and store.storeRegionCode != ''">
                and store_region_code = #{store.storeRegionCode}
            </if>
            <if test="managerName != null and managerName != ''">
            and t_sys_user_info.user_name like CONCAT('%', #{managerName}, '%')
        </if>
    </select>

    <!-- 根据id查询门店信息关联查询区域名称信息 -->
    <select id="findStoresById" parameterType="java.lang.String" resultType="com.xzsd.pc.store.entity.Store">
        SELECT
            <include refid="display_Column_List"/>
            , (select area_name from t_area_name where t_store_info.store_province_code = area_name_id) as province_name
            , (select area_name from t_area_name where t_store_info.store_city_code = area_name_id) as city_name
            , (select area_name from t_area_name where t_store_info.store_region_code = area_name_id) as region_name
        FROM
            t_store_info
        WHERE
            t_store_info.is_deleted = 1
        AND
            t_store_info.store_id = #{storeId}
    </select>

    <!-- 根据id查询是否包含此条记录 -->
    <select id="countStoreById" parameterType="java.lang.String" resultType="int">
        SELECT
            count(store_id)
        FROM
            t_store_info
        WHERE
            is_deleted = 1
        and
            store_id = #{storeId}
    </select>

    <!-- 根据id查询门店信息 -->
    <select id="selectByPrimaryKey" resultType="com.xzsd.pc.store.entity.Store" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from
        t_store_info
        where
        is_deleted = 1
        and
        store_id = #{storeId,jdbcType=VARCHAR}
    </select>

    <!-- 根据id修改门店信息 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.xzsd.pc.store.entity.Store">
        update t_store_info
             set
                create_time = #{createTime},
                create_person = #{createPerson},
                update_time = #{updateTime},
                update_person = #{updatePerson},
                is_deleted = #{isDeleted},
                store_name = #{storeName},
                store_phone = #{storePhone},
                store_manager_id = #{storeManagerId},
                store_license_code = #{storeLicenseCode},
                store_address = #{storeAddress},
                store_invitation_code = #{storeInvitationCode},
                store_province_code = #{storeProvinceCode},
                store_city_code = #{storeCityCode},
                store_region_code = #{storeRegionCode},
                version      = version + 1
        where store_id = #{storeId}
    </update>

    <!-- 删除门店信息（修改字段is_delete状态，并非真正删除） -->
    <update id="deleteStoreById" parameterType="java.lang.String">
        update
            t_store_info
        set
            is_deleted = 0,
            update_time = now(),
            update_person = #{updatePersonId},
            version = version + 1
        where
            store_id
        in
            <foreach item="storeId" index="index" collection="listIds" open="(" separator="," close=")">
                #{storeId}
            </foreach>
    </update>


</mapper>